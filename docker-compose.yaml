name: "buzz-services"

services:
  mysql_db:
    image: mysql:8.4
    restart: on-failure
    pull_policy: if_not_present
    environment:
      MYSQL_DATABASE: "buzz"
      MYSQL_USER: "user"
      MYSQL_PASSWORD: "password"
      MYSQL_ROOT_PASSWORD: "password"
    ports:
      - "3306:3306"
    expose:
      - "3306"
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h localhost -u root -pexample || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - buzz_network

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    networks:
      - buzz_network
    ports:
      - "8008:6379"
    expose:
      - "6379"

  mysql_db_go_migrate:
    container_name: mysql_db_go_migrate
    image: migrate/migrate:v4.17.1
    volumes:
      - ./db/migrations:/migrations
    entrypoint:
      [
        "migrate",
        "-path",
        "/migrations",
        "-database",
        "mysql://user:password@tcp(mysql_db:3306)/buzz",
      ]
    command: [ "up" ]
    depends_on:
      mysql_db:
        condition: service_healthy
    networks:
      - buzz_network

  buzz_api:
    container_name: buzz_api
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    depends_on:
      - mysql_db
      - mysql_db_go_migrate
      - redis
    environment:
      - HTTP_HOST=0.0.0.0
      - HTTP_PORT=8003
      - DEBUG=true
      - DATABASE_URL=mysql://user:password@mysql_db:3306/buzz
      - REDIS_URL=redis://redis:6379
      - JWT_KEY=wTkjqFUqqDpUGinAJqHZ
      - PASSWORD_HASHER_SALT=wTkjqFUqqDpUGinAJqHZ
      - FAKE_USER_PASSWORD=password123
    networks:
      - buzz_network

volumes:
  mysql-data:
    driver: local

networks:
  buzz_network:
    driver: bridge